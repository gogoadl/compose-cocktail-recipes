name: Android CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches: 
      - main
    

jobs:    
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build Debug APK
      run: ./gradlew assembleDebug
    - name: Generate Keystore file from Github Secrets
      run: |
          echo "${{ secrets.APP_KEYSTORE_BASE64 }}" > ./keystore.b64
          base64 -d -i ./keystore.b64 > ./${{ secrets.APP_KEY_FILE }}
          cp ./${{ secrets.APP_KEY_FILE }} ./app/${{ secrets.APP_KEY_FILE }}
    - name: Build Release APK
      run: |
          bash ./gradlew assembleRelease \
            -Pandroid.injected.signing.store.file=${{ secrets.APP_KEY_FILE }} \
            -Pandroid.injected.signing.store.password=${{ secrets.APP_KEYSTORE_PASSWORD }} \
            -Pandroid.injected.signing.key.alias=${{ secrets.APP_KEYSTORE_ALIAS }} \
            -Pandroid.injected.signing.key.password=${{ secrets.APP_KEY_PASSWORD }} \
            --stacktrace
    - name: Upload Debug APK
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: app/build/outputs/apk/debug/*.apk
    - name: Upload Release APK
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: app/build/outputs/apk/release/*.apk
        
  release:
    permissions:
      contents: write
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v3
    - name: set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: 'temurin'
    - name: Set output
      id: vars
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Check output
      env:
        RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
      run: |
        echo $RELEASE_VERSION
        echo ${{ steps.vars.outputs.tag }}
      
    - name: Bump version
      uses: chkfung/android-version-actions@v1.2.1
      with:
        gradlePath: app/build.gradle # or app/build.gradle.kts 
        versionCode: ${{github.run_number}}
        versionName: ${{env.RELEASE_VERSION}}
    - name: Download APK
      uses: actions/download-artifact@v1
      with:
        name: apk
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }} 
        draft: false
        prerelease: false
    - name: Upload Release APK
      id: upload_release_asset
      uses: actions/upload-release-asset@v1.0.1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./apk/app-debug.apk
        asset_name: Cocktails.apk
        asset_content_type: application/vnd.android.package-archive
